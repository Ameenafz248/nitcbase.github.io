<?xml version="1.0" encoding="UTF-8"?>
<!-- Do not edit this file with editors other than diagrams.net -->
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1681px" height="1251px" viewBox="-0.5 -0.5 1681 1251" content="&lt;mxfile host=&quot;app.diagrams.net&quot; modified=&quot;2022-02-12T14:48:01.362Z&quot; agent=&quot;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/98.0.4758.80 Safari/537.36 Edg/98.0.1108.43&quot; etag=&quot;yNkhxZqGSRX_dONwJ8M2&quot; version=&quot;16.5.6&quot; type=&quot;device&quot;&gt;&lt;diagram id=&quot;C5RBs43oDa-KdzZeNtuy&quot; name=&quot;Page-1&quot;&gt;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&lt;/diagram&gt;&lt;/mxfile&gt;" style="background-color: rgb(255, 255, 255);"><defs/><g><a xlink:href="nitcbase-documentation-v2/docs/Design/Buffer%20Layer#class-indinternal"><rect x="250" y="1000" width="477.99" height="250" fill="#e5ccff" stroke="#9673a6" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 480px; height: 250px; padding-top: 1000px; margin-left: 250px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 478px; height: 250px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Verdana; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px ; text-align: center ; font-size: 38px"><b><font style="font-size: 38px">IndInternal</font></b></p><hr size="1" style="font-size: 38px" /><p style="margin: 0px 0px 0px 4px ; font-size: 22px"></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ IndInternal()</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ IndInternal(int blockNum)</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ getEntry(void* ptr, int indexNum): int</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ setEntry(void* ptr, int indexNum): int</font></p></div></div></div></foreignObject><text x="250" y="1012" fill="rgb(0, 0, 0)" font-family="Verdana" font-size="12px">IndInternal...</text></switch></g></a><a xlink:href="nitcbase-documentation-v2/docs/Design/Buffer%20Layer#class-blockbuffer"><rect x="830" y="130" width="500" height="420" fill="#ecd5ff" stroke="#36393d" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 502px; height: 420px; padding-top: 130px; margin-left: 830px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 500px; height: 420px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Verdana; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 0px ; margin-top: 4px ; text-align: center"><b><font style="font-size: 38px">BlockBuffer</font></b></p><hr size="1" /><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px"># blockNum: int</font></p><hr size="1" style="font-size: 22px" /><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ BlockBuffer(char blockType)</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><span><font style="font-size: 22px">+ BlockBuffer(int blockNum)</font></span></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ getBlockNum(): int</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ getHeader(struct HeadInfo *head): int</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ setHeader(struct HeadInfo *head): int</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ getBlockType(): int</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ setBlockType(): int</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ setBlockType(): int</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px"># getBufferPtr(): unsigned char *</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px"># getBlock(): int</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px"># getFreeBlock(int blockType): int</font></p></div></div></div></foreignObject><text x="830" y="142" fill="rgb(0, 0, 0)" font-family="Verdana" font-size="12px">BlockBuffer...</text></switch></g></a><a xlink:href="nitcbase-documentation-v2/docs/Design/Buffer%20Layer#class-recbuffer"><rect x="1090" y="680" width="590" height="250" fill="#ffcc99" stroke="#ffffff" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 592px; height: 250px; padding-top: 680px; margin-left: 1090px;"><div data-drawio-colors="color: #000000; " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 590px; height: 250px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Verdana; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px ; text-align: center"><font style="font-size: 38px" face="Helvetica"><b>RecBuffer</b></font></p><hr size="1" style="font-size: 25px" /><p style="margin: 0px 0px 0px 4px ; font-size: 26px"></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ RecBuffer()</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ RecBuffer(int blockNum)</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ getSlotMap(unsigned char *slotMap): void</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ setSlotMap(unsigned char *slotMap): void</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ getRecord(union Attribute* rec, int slotNum): intÂ </font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ setRecord(union Attribute* rec, int slotNum): intÂ </font><br /></p></div></div></div></foreignObject><text x="1090" y="692" fill="#000000" font-family="Verdana" font-size="12px">RecBuffer...</text></switch></g></a><a xlink:href="nitcbase-documentation-v2/docs/Design/Buffer%20Layer#class-indbuffer"><rect x="530" y="680" width="480.15" height="200" fill="#ffcccc" stroke="#ffffff" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 482px; height: 200px; padding-top: 680px; margin-left: 530px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 480px; height: 200px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Verdana; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px ; text-align: center"><b><font style="font-size: 38px">IndBuffer</font></b></p><hr size="1" style="font-size: 22px" /><p style="margin: 0px 0px 0px 4px ; font-size: 22px"></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ IndBuffer(char blockType)</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ IndBuffer(int blockNum)</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ getEntry(void* ptr, int indexNum): int</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ setEntry(void* ptr, int indexNum): int</font><br /></p></div></div></div></foreignObject><text x="530" y="692" fill="rgb(0, 0, 0)" font-family="Verdana" font-size="12px">IndBuffer...</text></switch></g></a><path d="M 770.07 680 L 770.07 614.43 L 955 614.43 L 955 562.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 955 551.12 L 960.5 562.12 L 949.5 562.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1412.73 676.75 L 1412.73 610 L 1205 610 L 1205 562.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 1205 551.12 L 1210.5 562.12 L 1199.5 562.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 488.99 1000 L 488.99 940.14 L 650.04 940.14 L 650.04 892.12" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 650.04 881.12 L 655.54 892.12 L 644.54 892.12 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><path d="M 1027 1000 L 1027 880 L 902.23 880" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="stroke"/><path d="M 891.23 880 L 902.23 874.5 L 902.23 885.5 Z" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><a xlink:href="nitcbase-documentation-v2/docs/Design/Buffer%20Layer#class-indleaf"><rect x="777" y="1000" width="500" height="240" fill="#ffff88" stroke="#36393d" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 502px; height: 240px; padding-top: 1000px; margin-left: 777px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 500px; height: 240px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Verdana; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 4px 0px 0px ; text-align: center ; font-size: 38px"><b><font style="font-size: 38px">IndLeaf</font></b></p><hr size="1" style="font-size: 38px" /><p style="margin: 0px 0px 0px 4px ; font-size: 22px"></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ IndLeaf()</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ IndLeaf(int blockNum)</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ getEntry(void* ptr, int indexNum): int</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ setEntry(void* ptr, int indexNum): int</font></p></div></div></div></foreignObject><text x="777" y="1012" fill="rgb(0, 0, 0)" font-family="Verdana" font-size="12px">IndLeaf...</text></switch></g></a><a xlink:href="nitcbase-documentation-v2/docs/Design/Buffer%20Layer#class-staticbuffer"><rect x="0" y="0" width="670" height="360" fill="#dafa94" stroke="#36393d" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe flex-start; justify-content: unsafe flex-start; width: 672px; height: 360px; padding-top: 0px; margin-left: 0px;"><div data-drawio-colors="color: rgb(0, 0, 0); " style="box-sizing: border-box; font-size: 0px; text-align: left; width: 670px; height: 360px; overflow: hidden;"><div style="display: inline-block; font-size: 12px; font-family: Verdana; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; width: 100%; height: 100%; white-space: nowrap;"><p style="margin: 0px ; margin-top: 4px ; text-align: center"><b><font style="font-size: 38px">StaticBuffer</font></b></p><hr size="1" /><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">- blocks[HEADER_SIZE][BLOCK_SIZE]: unsigned char</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><span>- metaInfo[HEADER_SIZE]: struct BufferMetaInfo</span><br /></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">- blockAllocMap[DISK_BLOCKS]: unsigned char</font></p><hr size="1" style="font-size: 22px" /><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px"><span>+ StaticBuffer()</span></font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ ~StaticBuffer()</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">- getFreeBuffer(int blockNum): int</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">- getBufferNum(int blockNum): int</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ getStaticBlockType(int blockNum): int</font></p><p style="margin: 0px 0px 0px 4px ; font-size: 22px"><font style="font-size: 22px">+ setDirtyBit(int blockNum): void</font></p><p style="margin: 0px 0px 0px 4px"><br /></p><p style="margin: 0px 0px 0px 4px"><br /></p></div></div></div></foreignObject><text x="0" y="12" fill="rgb(0, 0, 0)" font-family="Verdana" font-size="12px">StaticBuffer...</text></switch></g></a><path d="M 830 340 L 671.58 181.58" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" stroke-dasharray="3 3" pointer-events="stroke"/><path d="M 684.58 185.39 L 670.79 180.79 L 675.39 194.58" fill="none" stroke="rgb(0, 0, 0)" stroke-miterlimit="10" pointer-events="all"/><g transform="translate(-0.5 -0.5)"><switch><foreignObject pointer-events="none" width="100%" height="100%" requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility" style="overflow: visible; text-align: left;"><div xmlns="http://www.w3.org/1999/xhtml" style="display: flex; align-items: unsafe center; justify-content: unsafe center; width: 1px; height: 1px; padding-top: 247px; margin-left: 763px;"><div data-drawio-colors="color: rgb(0, 0, 0); background-color: rgb(255, 255, 255); " style="box-sizing: border-box; font-size: 0px; text-align: center;"><div style="display: inline-block; font-size: 15px; font-family: Tahoma; color: rgb(0, 0, 0); line-height: 1.2; pointer-events: all; background-color: rgb(255, 255, 255); white-space: nowrap;">Friend</div></div></div></foreignObject><text x="763" y="252" fill="rgb(0, 0, 0)" font-family="Tahoma" font-size="15px" text-anchor="middle">Friend</text></switch></g></g><switch><g requiredFeatures="http://www.w3.org/TR/SVG11/feature#Extensibility"/><a transform="translate(0,-5)" xlink:href="https://www.diagrams.net/doc/faq/svg-export-text-problems" target="_blank"><text text-anchor="middle" font-size="10px" x="50%" y="100%">Text is not SVG - cannot display</text></a></switch></svg>